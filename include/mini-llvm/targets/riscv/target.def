// https://github.com/riscv-non-isa/riscv-elf-psabi-doc/releases/download/v1.0/riscv-abi.pdf

#ifdef REGS
    // idx, name, class, width, isPreserved, isAllocatable
    X(0, x0, GPR, 8, true, false)
    X(1, ra, GPR, 8, false, false)
    X(2, sp, GPR, 8, true, false)
    X(3, gp, GPR, 8, false, false)
    X(4, tp, GPR, 8, false, false)
    X(5, t0, GPR, 8, false, true)
    X(6, t1, GPR, 8, false, true)
    X(7, t2, GPR, 8, false, true)
    X(8, fp, GPR, 8, true, true)
    X(9, s1, GPR, 8, true, true)
    X(10, a0, GPR, 8, false, true)
    X(11, a1, GPR, 8, false, true)
    X(12, a2, GPR, 8, false, true)
    X(13, a3, GPR, 8, false, true)
    X(14, a4, GPR, 8, false, true)
    X(15, a5, GPR, 8, false, true)
    X(16, a6, GPR, 8, false, true)
    X(17, a7, GPR, 8, false, true)
    X(18, s2, GPR, 8, true, true)
    X(19, s3, GPR, 8, true, true)
    X(20, s4, GPR, 8, true, true)
    X(21, s5, GPR, 8, true, true)
    X(22, s6, GPR, 8, true, true)
    X(23, s7, GPR, 8, true, true)
    X(24, s8, GPR, 8, true, true)
    X(25, s9, GPR, 8, true, true)
    X(26, s10, GPR, 8, true, true)
    X(27, s11, GPR, 8, true, true)
    X(28, t3, GPR, 8, false, true)
    X(29, t4, GPR, 8, false, true)
    X(30, t5, GPR, 8, false, true)
    X(31, t6, GPR, 8, false, true)

    X(32, ft0, FPR, 8, false, true)
    X(33, ft1, FPR, 8, false, true)
    X(34, ft2, FPR, 8, false, true)
    X(35, ft3, FPR, 8, false, true)
    X(36, ft4, FPR, 8, false, true)
    X(37, ft5, FPR, 8, false, true)
    X(38, ft6, FPR, 8, false, true)
    X(39, ft7, FPR, 8, false, true)
    X(40, fs0, FPR, 8, true, true)
    X(41, fs1, FPR, 8, true, true)
    X(42, fa0, FPR, 8, false, true)
    X(43, fa1, FPR, 8, false, true)
    X(44, fa2, FPR, 8, false, true)
    X(45, fa3, FPR, 8, false, true)
    X(46, fa4, FPR, 8, false, true)
    X(47, fa5, FPR, 8, false, true)
    X(48, fa6, FPR, 8, false, true)
    X(49, fa7, FPR, 8, false, true)
    X(50, fs2, FPR, 8, true, true)
    X(51, fs3, FPR, 8, true, true)
    X(52, fs4, FPR, 8, true, true)
    X(53, fs5, FPR, 8, true, true)
    X(54, fs6, FPR, 8, true, true)
    X(55, fs7, FPR, 8, true, true)
    X(56, fs8, FPR, 8, true, true)
    X(57, fs9, FPR, 8, true, true)
    X(58, fs10, FPR, 8, true, true)
    X(59, fs11, FPR, 8, true, true)
    X(60, ft8, FPR, 8, false, true)
    X(61, ft9, FPR, 8, false, true)
    X(62, ft10, FPR, 8, false, true)
    X(63, ft11, FPR, 8, false, true)
#endif // REGS

#ifdef INTEGER_RESULT_REGS
    X(a0)
    X(a1)
#endif // INTEGER_RESULT_REGS

#ifdef INTEGER_ARG_REGS
    X(a0)
    X(a1)
    X(a2)
    X(a3)
    X(a4)
    X(a5)
    X(a6)
    X(a7)
#endif // INTEGER_ARG_REGS

#ifdef FLOATING_RESULT_REGS
    X(fa0)
    X(fa1)
#endif // FLOATING_RESULT_REGS

#ifdef FLOATING_ARG_REGS
    X(fa0)
    X(fa1)
    X(fa2)
    X(fa3)
    X(fa4)
    X(fa5)
    X(fa6)
    X(fa7)
#endif // FLOATING_ARG_REGS

// https://github.com/riscv/riscv-isa-manual/releases/download/20240411/unpriv-isa-asciidoc.pdf

#ifdef OPS
    // mnemonic, name
    X("lui", LUI)
    X("auipc", AUIPC)
    X("li", LI)
    X("la", LA)
    X("lb", LB)
    X("lbu", LBU)
    X("lh", LH)
    X("lhu", LHU)
    X("lw", LW)
    X("lwu", LWU)
    X("ld", LD)
    X("sb", SB)
    X("sh", SH)
    X("sw", SW)
    X("sd", SD)
    X("mv", Mv)
    X("neg", Neg)
    X("add", Add)
    X("addw", AddW)
    X("sub", Sub)
    X("subw", SubW)
    X("mul", Mul)
    X("mulw", MulW)
    X("div", Div)
    X("divw", DivW)
    X("divu", DivU)
    X("divuw", DivUW)
    X("rem", Rem)
    X("remw", RemW)
    X("remu", RemU)
    X("remuw", RemUW)
    X("not", Not)
    X("and", And)
    X("or", Or)
    X("xor", Xor)
    X("sll", SLL)
    X("sllw", SLLW)
    X("srl", SRL)
    X("srlw", SRLW)
    X("sra", SRA)
    X("sraw", SRAW)
    X("addi", AddI)
    X("addiw", AddIW)
    X("andi", AndI)
    X("ori", OrI)
    X("xori", XorI)
    X("slli", SLLI)
    X("slliw", SLLIW)
    X("srli", SRLI)
    X("srliw", SRLIW)
    X("srai", SRAI)
    X("sraiw", SRAIW)
    X("sext.w", SExtW)
    X("seqz", SEQZ)
    X("snez", SNEZ)
    X("slt", SLT)
    X("sltu", SLTU)
    X("sltz", SLTZ)
    X("sgt", SGT)
    X("sgtu", SGTU)
    X("sgtz", SGTZ)
    X("j", J)
    X("call", Call)
    X("ret", Ret)
    X("jal", JAL)
    X("jalr", JALR)
    X("beq", BEQ)
    X("beqz", BEQZ)
    X("bne", BNE)
    X("bnez", BNEZ)
    X("blt", BLT)
    X("bltu", BLTU)
    X("bltz", BLTZ)
    X("bgt", BGT)
    X("bgtu", BGTU)
    X("bgtz", BGTZ)
    X("ble", BLE)
    X("bleu", BLEU)
    X("blez", BLEZ)
    X("bge", BGE)
    X("bgeu", BGEU)
    X("bgez", BGEZ)
    X("flw", FLW)
    X("fld", FLD)
    X("fsw", FSW)
    X("fsd", FSD)
    X("fmv.s", FMvS)
    X("fmv.d", FMvD)
    X("fmv.w.x", FMvWX)
    X("fmv.d.x", FMvDX)
    X("fmv.x.w", FMvXW)
    X("fmv.x.d", FMvXD)
    X("fneg.s", FNegS)    
    X("fneg.d", FNegD)
    X("fadd.s", FAddS)
    X("fadd.d", FAddD)
    X("fsub.s", FSubS)
    X("fsub.d", FSubD)
    X("fmul.s", FMulS)
    X("fmul.d", FMulD)
    X("fdiv.s", FDivS)
    X("fdiv.d", FDivD)
    X("feq.s", FEQS)
    X("feq.d", FEQD)
    X("flt.s", FLTS)
    X("flt.d", FLTD)
    X("fgt.s", FGTS)
    X("fgt.d", FGTD)
    X("fle.s", FLES)
    X("fle.d", FLED)
    X("fge.s", FGES)
    X("fge.d", FGED)
    X("fcvt.s.d", FCvtSD)
    X("fcvt.d.s", FCvtDS)
    X("fcvt.s.w", FCvtSW)
    X("fcvt.s.l", FCvtSL)
    X("fcvt.s.wu", FCvtSWU)
    X("fcvt.s.lu", FCvtSLU)
    X("fcvt.d.w", FCvtDW)
    X("fcvt.d.l", FCvtDL)
    X("fcvt.d.wu", FCvtDWU)
    X("fcvt.d.lu", FCvtDLU)
    X("fcvt.w.s", FCvtWS)
    X("fcvt.l.s", FCvtLS)
    X("fcvt.wu.s", FCvtWUS)
    X("fcvt.lu.s", FCvtLUS)
    X("fcvt.w.d", FCvtWD)
    X("fcvt.l.d", FCvtLD)
    X("fcvt.wu.d", FCvtWUD)
    X("fcvt.lu.d", FCvtLUD)
#endif // OPS
