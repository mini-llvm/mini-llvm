// SPDX-License-Identifier: MIT

#include <tuple>

#include <gtest/gtest.h>

#include "mini-llvm/utils/BigInteger.h"

namespace mini_llvm {

TEST(BigIntegerTest, Add) {
    EXPECT_EQ(BigInteger("200000000000000000000") + BigInteger("300000000000000000000"), BigInteger("500000000000000000000"));
    EXPECT_EQ(BigInteger("200000000000000000000") + BigInteger("-300000000000000000000"), BigInteger("-100000000000000000000"));
    EXPECT_EQ(BigInteger("-200000000000000000000") + BigInteger("300000000000000000000"), BigInteger("100000000000000000000"));
    EXPECT_EQ(BigInteger("-200000000000000000000") + BigInteger("-300000000000000000000"), BigInteger("-500000000000000000000"));
    EXPECT_EQ(BigInteger("0") + BigInteger("300000000000000000000"), BigInteger("300000000000000000000"));
    EXPECT_EQ(BigInteger("0") + BigInteger("-300000000000000000000"), BigInteger("-300000000000000000000"));
    EXPECT_EQ(BigInteger("200000000000000000000") + BigInteger("0"), BigInteger("200000000000000000000"));
    EXPECT_EQ(BigInteger("-200000000000000000000") + BigInteger("0"), BigInteger("-200000000000000000000"));
    EXPECT_EQ(BigInteger("0") + BigInteger("0"), BigInteger("0"));
    EXPECT_EQ(BigInteger("18446744073709551615") + BigInteger("1"), BigInteger("18446744073709551616"));
    EXPECT_EQ(BigInteger("-18446744073709551615") + BigInteger("-1"), BigInteger("-18446744073709551616"));
    EXPECT_EQ(BigInteger("18446744073709551616") + BigInteger("-1"), BigInteger("18446744073709551615"));
    EXPECT_EQ(BigInteger("-18446744073709551616") + BigInteger("1"), BigInteger("-18446744073709551615"));
    EXPECT_EQ(BigInteger("1") + BigInteger("18446744073709551615"), BigInteger("18446744073709551616"));
    EXPECT_EQ(BigInteger("-1") + BigInteger("-18446744073709551615"), BigInteger("-18446744073709551616"));
    EXPECT_EQ(BigInteger("-1") + BigInteger("18446744073709551616"), BigInteger("18446744073709551615"));
    EXPECT_EQ(BigInteger("1") + BigInteger("-18446744073709551616"), BigInteger("-18446744073709551615"));
    EXPECT_EQ(BigInteger("18446744073709551615") + BigInteger("18446744073709551615"), BigInteger("36893488147419103230"));
    EXPECT_EQ(BigInteger("-18446744073709551615") + BigInteger("-18446744073709551615"), BigInteger("-36893488147419103230"));
    EXPECT_EQ(BigInteger("18446744073709551616") + BigInteger("18446744073709551616"), BigInteger("36893488147419103232"));
    EXPECT_EQ(BigInteger("-18446744073709551616") + BigInteger("-18446744073709551616"), BigInteger("-36893488147419103232"));
}

TEST(BigIntegerTest, Sub) {
    EXPECT_EQ(BigInteger("200000000000000000000") - BigInteger("300000000000000000000"), BigInteger("-100000000000000000000"));
    EXPECT_EQ(BigInteger("200000000000000000000") - BigInteger("-300000000000000000000"), BigInteger("500000000000000000000"));
    EXPECT_EQ(BigInteger("-200000000000000000000") - BigInteger("300000000000000000000"), BigInteger("-500000000000000000000"));
    EXPECT_EQ(BigInteger("-200000000000000000000") - BigInteger("-300000000000000000000"), BigInteger("100000000000000000000"));
    EXPECT_EQ(BigInteger("0") - BigInteger("300000000000000000000"), BigInteger("-300000000000000000000"));
    EXPECT_EQ(BigInteger("0") - BigInteger("-300000000000000000000"), BigInteger("300000000000000000000"));
    EXPECT_EQ(BigInteger("200000000000000000000") - BigInteger("0"), BigInteger("200000000000000000000"));
    EXPECT_EQ(BigInteger("-200000000000000000000") - BigInteger("0"), BigInteger("-200000000000000000000"));
    EXPECT_EQ(BigInteger("0") - BigInteger("0"), BigInteger("0"));
    EXPECT_EQ(BigInteger("18446744073709551616") - BigInteger("1"), BigInteger("18446744073709551615"));
    EXPECT_EQ(BigInteger("-18446744073709551616") - BigInteger("-1"), BigInteger("-18446744073709551615"));
    EXPECT_EQ(BigInteger("18446744073709551615") - BigInteger("-1"), BigInteger("18446744073709551616"));
    EXPECT_EQ(BigInteger("-18446744073709551615") - BigInteger("1"), BigInteger("-18446744073709551616"));
    EXPECT_EQ(BigInteger("1") - BigInteger("18446744073709551616"), BigInteger("-18446744073709551615"));
    EXPECT_EQ(BigInteger("-1") - BigInteger("-18446744073709551616"), BigInteger("18446744073709551615"));
    EXPECT_EQ(BigInteger("-1") - BigInteger("18446744073709551615"), BigInteger("-18446744073709551616"));
    EXPECT_EQ(BigInteger("1") - BigInteger("-18446744073709551615"), BigInteger("18446744073709551616"));
    EXPECT_EQ(BigInteger("18446744073709551615") - BigInteger("-18446744073709551615"), BigInteger("36893488147419103230"));
    EXPECT_EQ(BigInteger("-18446744073709551615") - BigInteger("18446744073709551615"), BigInteger("-36893488147419103230"));
    EXPECT_EQ(BigInteger("18446744073709551616") - BigInteger("-18446744073709551616"), BigInteger("36893488147419103232"));
    EXPECT_EQ(BigInteger("-18446744073709551616") - BigInteger("18446744073709551616"), BigInteger("-36893488147419103232"));
}

TEST(BigIntegerTest, Mul) {
    EXPECT_EQ(BigInteger("200000000000000000000") * BigInteger("300000000000000000000"), BigInteger("60000000000000000000000000000000000000000"));
    EXPECT_EQ(BigInteger("200000000000000000000") * BigInteger("-300000000000000000000"), BigInteger("-60000000000000000000000000000000000000000"));
    EXPECT_EQ(BigInteger("-200000000000000000000") * BigInteger("300000000000000000000"), BigInteger("-60000000000000000000000000000000000000000"));
    EXPECT_EQ(BigInteger("-200000000000000000000") * BigInteger("-300000000000000000000"), BigInteger("60000000000000000000000000000000000000000"));
    EXPECT_EQ(BigInteger("0") * BigInteger("300000000000000000000"), BigInteger("0"));
    EXPECT_EQ(BigInteger("0") * BigInteger("-300000000000000000000"), BigInteger("0"));
    EXPECT_EQ(BigInteger("200000000000000000000") * BigInteger("0"), BigInteger("0"));
    EXPECT_EQ(BigInteger("-200000000000000000000") * BigInteger("0"), BigInteger("0"));
    EXPECT_EQ(BigInteger("0") * BigInteger("0"), BigInteger("0"));
    EXPECT_EQ(BigInteger("18446744073709551615") * BigInteger("18446744073709551615"), BigInteger("340282366920938463426481119284349108225"));
    EXPECT_EQ(BigInteger("18446744073709551615") * BigInteger("-18446744073709551615"), BigInteger("-340282366920938463426481119284349108225"));
    EXPECT_EQ(BigInteger("-18446744073709551615") * BigInteger("18446744073709551615"), BigInteger("-340282366920938463426481119284349108225"));
    EXPECT_EQ(BigInteger("-18446744073709551615") * BigInteger("-18446744073709551615"), BigInteger("340282366920938463426481119284349108225"));
    EXPECT_EQ(BigInteger("18446744073709551616") * BigInteger("18446744073709551616"), BigInteger("340282366920938463463374607431768211456"));
    EXPECT_EQ(BigInteger("18446744073709551616") * BigInteger("-18446744073709551616"), BigInteger("-340282366920938463463374607431768211456"));
    EXPECT_EQ(BigInteger("-18446744073709551616") * BigInteger("18446744073709551616"), BigInteger("-340282366920938463463374607431768211456"));
    EXPECT_EQ(BigInteger("-18446744073709551616") * BigInteger("-18446744073709551616"), BigInteger("340282366920938463463374607431768211456"));
}

TEST(BigIntegerTest, Div) {
    EXPECT_EQ(BigInteger("100000000000000000000") / 300000000, BigInteger("333333333333"));
    EXPECT_EQ(BigInteger("100000000000000000000") / -300000000, BigInteger("-333333333333"));
    EXPECT_EQ(BigInteger("-100000000000000000000") / 300000000, BigInteger("-333333333333"));
    EXPECT_EQ(BigInteger("-100000000000000000000") / -300000000, BigInteger("333333333333"));
    EXPECT_EQ(BigInteger("0") / 300000000, BigInteger("0"));
    EXPECT_EQ(BigInteger("0") / -300000000, BigInteger("0"));
}

TEST(BigIntegerTest, Rem) {
    EXPECT_EQ(BigInteger("100000000000000000000") % 300000000, 100000000);
    EXPECT_EQ(BigInteger("100000000000000000000") % -300000000, 100000000);
    EXPECT_EQ(BigInteger("-100000000000000000000") % 300000000, -100000000);
    EXPECT_EQ(BigInteger("-100000000000000000000") % -300000000, -100000000);
    EXPECT_EQ(BigInteger("0") % 300000000, 0);
    EXPECT_EQ(BigInteger("0") % -300000000, 0);
}

TEST(BigIntegerTest, DivRem) {
    BigInteger q;
    int32_t r;

    std::tie(q, r) = divRem(BigInteger("100000000000000000000"), 300000000);
    EXPECT_EQ(q, BigInteger("333333333333"));
    EXPECT_EQ(r, 100000000);

    std::tie(q, r) = divRem(BigInteger("100000000000000000000"), -300000000);
    EXPECT_EQ(q, BigInteger("-333333333333"));
    EXPECT_EQ(r, 100000000);

    std::tie(q, r) = divRem(BigInteger("-100000000000000000000"), 300000000);
    EXPECT_EQ(q, BigInteger("-333333333333"));
    EXPECT_EQ(r, -100000000);

    std::tie(q, r) = divRem(BigInteger("-100000000000000000000"), -300000000);
    EXPECT_EQ(q, BigInteger("333333333333"));
    EXPECT_EQ(r, -100000000);

    std::tie(q, r) = divRem(BigInteger("0"), 300000000);
    EXPECT_EQ(q, BigInteger("0"));
    EXPECT_EQ(r, 0);

    std::tie(q, r) = divRem(BigInteger("0"), -300000000);
    EXPECT_EQ(q, BigInteger("0"));
    EXPECT_EQ(r, 0);
}

} // namespace mini_llvm
